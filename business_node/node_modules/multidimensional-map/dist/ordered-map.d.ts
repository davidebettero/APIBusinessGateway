declare class OrderedMap<K, V> {
    map: Map<K, V | null>;
    order: K[];
    constructor(keyOrder?: K[]);
    append(key: K, value: V): void;
    prepend(key: K, value: V): void;
    has(key: K): boolean;
    get(key: K): V;
    getAt(index: number): V;
    getPairAt(index: number): [K, V];
    getKeyAt(index: number): K;
    getKeys(): K[];
    forEach(fn: (value: V, key: K, map: Map<K, V>) => void): void;
    indexOf(key: K): number;
    delete(key: K): boolean;
    deleteAt(index: number): boolean;
    clear(): void;
    get length(): number;
}
export { OrderedMap };
